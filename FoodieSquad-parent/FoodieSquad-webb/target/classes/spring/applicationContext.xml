<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd 
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
	>
	<!-- 扫描包下注解 -->
	 <context:component-scan base-package="com.niit.service"></context:component-scan>
     <context:component-scan base-package="com.niit.mapper"></context:component-scan>
      <context:component-scan base-package="com.niit.security"></context:component-scan>
  
    
   
	<!-- 数据库连接池 -->
	<!-- 加载配置文件 -->
	<context:property-placeholder location="classpath*:properties/*.properties" />
	<!-- 数据库连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="maxActive" value="10" />
		<property name="minIdle" value="5" />
	</bean>
	
	<!-- 让spring管理sqlsessionfactory 使用mybatis和spring整合包中的 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 数据库连接池 --> 
		<property name="dataSource" ref="dataSource" />
		<!-- 加载mybatis的全局配置文件 -->
		<property name="configLocation" value="classpath:mybatis/SqlMapConfig.xml" />
	</bean>
	<!-- 基于MapperScannerConfigurer，会自动扫描指定包下的接口文件和映射文件 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.niit.mapper"/>
	</bean>
	<!-- spring securitybean -->
	<bean id="SmsCodeAuthenticationFilter" class="com.niit.security.SmsCodeAuthenticationFilter">
	  <property name="authenticationManager" ref="org.springframework.security.authenticationManager" />
     </bean>
	<bean id="myUserDetailService" class="com.niit.security.myUserDetailService"/>
	<bean id="myUserDetailService2" class="com.niit.security.myUserDetailService2"/>
    <bean id="SmsCodeAuthenticationProvider" class="com.niit.security.SmsCodeAuthenticationProvider"></bean>
  <bean id="myAuthenticationSuccessHandler" class="com.niit.security.myAuthenticationSuccessHandler"/>
  <bean id="myAuthenticationSuccessHandler2" class="com.niit.security.myAuthenticationSuccessHandler2"/>
   <bean id="myAutheticationFailedHandler" class="com.niit.security.myAutheticationFailedHandler"/>
	<bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
	<bean id="myLogoutSuccessHandler" class="com.niit.security.myLogoutSuccessHandler"></bean>
	 <!-- 加载配置文件-->
    <context:property-placeholder location="classpath:config/application.properties" />
	<bean id="jdbcTokenRepository"  
          class="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl">  
        <property name="dataSource" ref="dataSource"/>  
        <property name="createTableOnStartup" value="false"></property>
    </bean>  
  

</beans>